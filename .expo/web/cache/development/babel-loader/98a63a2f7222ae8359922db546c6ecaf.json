{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sanchit/Documents/GitHub/Todo-app-in-React-Native-Android-IOS-/node_modules/react-native-woodpicker/components/DatePicker.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useMemo } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport DefaultInputButton from \"./InputButton\";\nimport DefaultDoneBar from \"./DoneBar\";\nimport IOSDatePicker from \"./IOSDatePicker\";\nimport AndroidDatePicker from \"./AndroidDatePicker\";\nvar isIOS = Platform.OS === \"ios\";\nvar DEFAULT_BACKDROP_ANIMATION = {\n  opactiy: 0.5,\n  duration: 1000,\n  delay: 300\n};\n\nfunction getAnimatedProperties(backdropAnimation) {\n  return _objectSpread(_objectSpread({}, DEFAULT_BACKDROP_ANIMATION), backdropAnimation);\n}\n\nvar DatePicker = function DatePicker(_ref) {\n  var date = _ref.date,\n      containerStyle = _ref.containerStyle,\n      locale = _ref.locale,\n      iosPickerMode = _ref.iosPickerMode,\n      placeholder = _ref.placeholder,\n      placeholderStyle = _ref.placeholderStyle,\n      style = _ref.style,\n      minDate = _ref.minDate,\n      maxDate = _ref.maxDate,\n      isNullable = _ref.isNullable,\n      title = _ref.title,\n      doneText = _ref.doneText,\n      onDateChange = _ref.onDateChange,\n      onOpen = _ref.onOpen,\n      onClose = _ref.onClose,\n      disabled = _ref.disabled,\n      InputComponent = _ref.InputComponent,\n      DoneBarComponent = _ref.DoneBarComponent,\n      backdropAnimation = _ref.backdropAnimation,\n      iOSOnlyProps = _ref.iOSOnlyProps,\n      androidOnlyProps = _ref.androidOnlyProps;\n\n  var _useState = useState(date || new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickedDate = _useState2[0],\n      setPickedDate = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var fadeAnimationValue = useRef(new Animated.Value(0)).current;\n  var animationProperties = useMemo(function () {\n    return getAnimatedProperties(backdropAnimation);\n  }, [backdropAnimation]);\n\n  var handleiOSDateChange = function handleiOSDateChange(_, newDate) {\n    setPickedDate(newDate);\n  };\n\n  var handleAndroidDateChange = function handleAndroidDateChange(_, newDate) {\n    togglePicker();\n\n    if (newDate !== undefined) {\n      setPickedDate(newDate);\n      onDateChange(newDate);\n    }\n  };\n\n  var resetValue = function resetValue() {\n    onDateChange(null);\n  };\n\n  var toggle = function toggle() {\n    setShow(!show);\n    show ? onOpen() : onClose();\n  };\n\n  var togglePicker = function togglePicker() {\n    if (disabled) {\n      return;\n    }\n\n    if (!isIOS) {\n      toggle();\n      return;\n    }\n\n    if (!show) {\n      toggle();\n    }\n\n    Animated.timing(fadeAnimationValue, {\n      toValue: !show ? animationProperties.opactiy : 0,\n      duration: !show ? animationProperties.duration : 0,\n      delay: !show ? animationProperties.delay : 0,\n      useNativeDriver: true\n    }).start(show ? toggle : null);\n    setPickedDate(show && date ? date : pickedDate);\n  };\n\n  var onDonePress = function onDonePress() {\n    togglePicker();\n    onDateChange(pickedDate);\n  };\n\n  var renderInputButton = function renderInputButton() {\n    var inputProps = {\n      resetValue: resetValue,\n      togglePicker: togglePicker,\n      style: style,\n      placeholder: placeholder,\n      placeholderStyle: placeholderStyle,\n      isNullable: isNullable\n    };\n    var RenderComponent = InputComponent ? InputComponent : DefaultInputButton;\n    return React.createElement(RenderComponent, _extends({}, inputProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  var renderDoneBarButton = function renderDoneBarButton() {\n    var barProps = {\n      title: title,\n      doneText: doneText,\n      onDonePress: onDonePress\n    };\n    var RenderComponent = DoneBarComponent ? DoneBarComponent : DefaultDoneBar;\n    return React.createElement(RenderComponent, _extends({}, barProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  var datePickerProps = {\n    locale: locale,\n    mode: iosPickerMode,\n    show: show,\n    disabled: disabled,\n    animationValue: fadeAnimationValue,\n    maximumDate: maxDate,\n    minimumDate: minDate,\n    date: pickedDate,\n    togglePicker: togglePicker,\n    onDateChange: isIOS ? handleiOSDateChange : handleAndroidDateChange,\n    renderInput: renderInputButton,\n    renderDoneBar: renderDoneBarButton,\n    containerStyle: containerStyle,\n    customProps: isIOS ? iOSOnlyProps : androidOnlyProps\n  };\n  return isIOS ? React.createElement(IOSDatePicker, _extends({}, datePickerProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  })) : React.createElement(AndroidDatePicker, _extends({}, datePickerProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }));\n};\n\nDatePicker.defaultProps = {\n  isNullable: false,\n  title: \"\",\n  placeholder: \"\",\n  androidPickerMode: \"calendar\",\n  iosPickerMode: \"date\",\n  locale: \"en\",\n  onOpen: function onOpen() {\n    return null;\n  },\n  onClose: function onClose() {\n    return null;\n  },\n  backdropAnimation: DEFAULT_BACKDROP_ANIMATION,\n  iOSOnlyProps: {},\n  androidOnlyProps: {}\n};\nexport default DatePicker;","map":{"version":3,"sources":["/Users/sanchit/Documents/GitHub/Todo-app-in-React-Native-Android-IOS-/node_modules/react-native-woodpicker/components/DatePicker.js"],"names":["React","useState","useRef","useMemo","DefaultInputButton","DefaultDoneBar","IOSDatePicker","AndroidDatePicker","isIOS","Platform","OS","DEFAULT_BACKDROP_ANIMATION","opactiy","duration","delay","getAnimatedProperties","backdropAnimation","DatePicker","date","containerStyle","locale","iosPickerMode","placeholder","placeholderStyle","style","minDate","maxDate","isNullable","title","doneText","onDateChange","onOpen","onClose","disabled","InputComponent","DoneBarComponent","iOSOnlyProps","androidOnlyProps","Date","pickedDate","setPickedDate","show","setShow","fadeAnimationValue","Animated","Value","current","animationProperties","handleiOSDateChange","_","newDate","handleAndroidDateChange","togglePicker","undefined","resetValue","toggle","timing","toValue","useNativeDriver","start","onDonePress","renderInputButton","inputProps","RenderComponent","renderDoneBarButton","barProps","datePickerProps","mode","animationValue","maximumDate","minimumDate","renderInput","renderDoneBar","customProps","defaultProps","androidPickerMode"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useMemo } from \"react\";\nimport { Platform, Animated } from \"react-native\";\nimport DefaultInputButton from \"./InputButton\";\nimport DefaultDoneBar from \"./DoneBar\";\nimport IOSDatePicker from \"./IOSDatePicker\";\nimport AndroidDatePicker from \"./AndroidDatePicker\";\n\nconst isIOS = Platform.OS === \"ios\";\nconst DEFAULT_BACKDROP_ANIMATION = {\n  opactiy: 0.5,\n  duration: 1000,\n  delay: 300,\n};\nfunction getAnimatedProperties(backdropAnimation) {\n  return {\n    ...DEFAULT_BACKDROP_ANIMATION,\n    ...backdropAnimation,\n  };\n}\n\nconst DatePicker = ({\n  date,\n  containerStyle,\n  locale,\n  iosPickerMode,\n  placeholder,\n  placeholderStyle,\n  style,\n  minDate,\n  maxDate,\n  isNullable,\n  title,\n  doneText,\n  onDateChange,\n  onOpen,\n  onClose,\n  disabled,\n  InputComponent,\n  DoneBarComponent,\n  backdropAnimation,\n  iOSOnlyProps,\n  androidOnlyProps,\n}) => {\n  const [pickedDate, setPickedDate] = useState(date || new Date());\n  const [show, setShow] = useState(false);\n  const fadeAnimationValue = useRef(new Animated.Value(0)).current;\n\n  const animationProperties = useMemo(\n    () => getAnimatedProperties(backdropAnimation),\n    [backdropAnimation]\n  );\n\n  const handleiOSDateChange = (_, newDate) => {\n    setPickedDate(newDate);\n  };\n\n  const handleAndroidDateChange = (_, newDate) => {\n    togglePicker();\n    if (newDate !== undefined) {\n      setPickedDate(newDate);\n      onDateChange(newDate);\n    }\n  };\n\n  const resetValue = () => {\n    onDateChange(null);\n  };\n\n  const toggle = () => {\n    setShow(!show);\n    show ? onOpen() : onClose();\n  };\n\n  const togglePicker = () => {\n    if (disabled) {\n      return;\n    }\n\n    // No animation needed for Android\n    if (!isIOS) {\n      toggle();\n      return;\n    }\n\n    if (!show) {\n      toggle();\n    }\n\n    Animated.timing(fadeAnimationValue, {\n      toValue: !show ? animationProperties.opactiy : 0,\n      duration: !show ? animationProperties.duration : 0,\n      delay: !show ? animationProperties.delay : 0,\n      useNativeDriver: true,\n    }).start(show ? toggle : null);\n\n    setPickedDate(show && date ? date : pickedDate);\n  };\n\n  const onDonePress = () => {\n    togglePicker();\n    onDateChange(pickedDate);\n  };\n\n  const renderInputButton = () => {\n    const inputProps = {\n      resetValue,\n      togglePicker,\n      style,\n      placeholder,\n      placeholderStyle,\n      isNullable,\n    };\n    const RenderComponent = InputComponent\n      ? InputComponent\n      : DefaultInputButton;\n    return <RenderComponent {...inputProps} />;\n  };\n\n  const renderDoneBarButton = () => {\n    const barProps = {\n      title,\n      doneText,\n      onDonePress,\n    };\n    const RenderComponent = DoneBarComponent\n      ? DoneBarComponent\n      : DefaultDoneBar;\n    return <RenderComponent {...barProps} />;\n  };\n\n  const datePickerProps = {\n    locale,\n    mode: iosPickerMode,\n    show,\n    disabled,\n    animationValue: fadeAnimationValue,\n    maximumDate: maxDate,\n    minimumDate: minDate,\n    date: pickedDate,\n    togglePicker,\n    onDateChange: isIOS ? handleiOSDateChange : handleAndroidDateChange,\n    renderInput: renderInputButton,\n    renderDoneBar: renderDoneBarButton,\n    containerStyle: containerStyle,\n    customProps: isIOS ? iOSOnlyProps : androidOnlyProps,\n  };\n\n  return isIOS ? (\n    <IOSDatePicker {...datePickerProps} />\n  ) : (\n    <AndroidDatePicker {...datePickerProps} />\n  );\n};\n\nDatePicker.defaultProps = {\n  isNullable: false,\n  title: \"\",\n  placeholder: \"\",\n  androidPickerMode: \"calendar\",\n  iosPickerMode: \"date\",\n  locale: \"en\",\n  onOpen: () => null,\n  onClose: () => null,\n  backdropAnimation: DEFAULT_BACKDROP_ANIMATION,\n  iOSOnlyProps: {},\n  androidOnlyProps: {},\n};\n\nexport default DatePicker;\n"]},"metadata":{},"sourceType":"module"}