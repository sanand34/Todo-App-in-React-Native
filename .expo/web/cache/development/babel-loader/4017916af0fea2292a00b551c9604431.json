{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sanchit/Documents/GitHub/Todo-app-in-React-Native-Android-IOS-/Todo.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Checkbox } from \"react-native-paper\";\nimport { useStateValue } from \"./StateProvider\";\nimport { actionTypes } from \"./reducer\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar Todo = function Todo(_ref) {\n  var todo = _ref.todo;\n\n  var _useStateValue = useStateValue(),\n      _useStateValue2 = _slicedToArray(_useStateValue, 2),\n      todos = _useStateValue2[0].todos,\n      dispatch = _useStateValue2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputValue = _useState4[0],\n      setInputValue = _useState4[1];\n\n  var toggleModalVisibility = function toggleModalVisibility() {\n    setModalVisible(!isModalVisible);\n  };\n\n  function _storeData(value) {\n    return _regeneratorRuntime.async(function _storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"10~Tasks\", JSON.stringify(value)));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n\n  useEffect(function () {}, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Checkbox, {\n    status: todo.check ? \"checked\" : \"unchecked\",\n    onPress: function onPress() {\n      var newinfo = todos.filter(function (thistodo) {\n        return thistodo.key !== todo.key;\n      });\n\n      _storeData([{\n        key: todo.key,\n        todo: todo.todo,\n        check: !todo.check\n      }].concat(_toConsumableArray(newinfo)));\n\n      dispatch({\n        type: actionTypes.SET_TODOS,\n        todos: [{\n          key: todo.key,\n          todo: todo.todo,\n          check: !todo.check\n        }].concat(_toConsumableArray(newinfo))\n      });\n    },\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.todo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: todo.check ? styles.textinvalid : styles.textvalid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, todo.todo)), React.createElement(Button, {\n    title: \"delete\",\n    color: \"crimson\",\n    onPress: function onPress() {\n      dispatch({\n        type: actionTypes.SET_USER,\n        user: todo.key\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Delete\"), React.createElement(Button, {\n    title: \"Edit\",\n    onPress: toggleModalVisibility,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: isModalVisible,\n    presentationStyle: \"overFullScreen\",\n    onDismiss: toggleModalVisibility,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.viewWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Enter something...\",\n    value: inputValue,\n    style: styles.textInput,\n    onChangeText: function onChangeText(value) {\n      return setInputValue(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Set\",\n    onPress: function onPress() {\n      var newinfo = todos.filter(function (thistodo) {\n        return thistodo.key !== todo.key;\n      });\n\n      _storeData([{\n        key: todo.key,\n        todo: inputValue,\n        check: todo.check\n      }].concat(_toConsumableArray(newinfo)));\n\n      dispatch({\n        type: actionTypes.SET_TODOS,\n        todos: [{\n          key: todo.key,\n          todo: inputValue,\n          check: todo.check\n        }].concat(_toConsumableArray(newinfo))\n      });\n      setInputValue(\"\");\n      toggleModalVisibility();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Todo;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#fff\"\n  },\n  viewWrapper: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.2)\"\n  },\n  modalView: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    elevation: 5,\n    transform: [{\n      translateX: -(width * 0.4)\n    }, {\n      translateY: -90\n    }],\n    height: 180,\n    width: width * 0.8,\n    backgroundColor: \"#fff\",\n    borderRadius: 7\n  },\n  textInput: {\n    width: \"80%\",\n    borderRadius: 5,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderColor: \"rgba(0, 0, 0, 0.2)\",\n    borderWidth: 1,\n    marginBottom: 8\n  },\n  container: {\n    flex: 1,\n    margin: 10,\n    backgroundColor: \"rgb(100,73,234)\",\n    borderRadius: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\"\n  },\n  textvalid: {\n    fontSize: 30,\n    padding: 30,\n    color: \"white\"\n  },\n  textinvalid: {\n    fontSize: 30,\n    padding: 30,\n    textDecorationLine: \"line-through\",\n    color: \"grey\"\n  },\n  todo: {\n    width: 240\n  }\n});","map":{"version":3,"sources":["/Users/sanchit/Documents/GitHub/Todo-app-in-React-Native-Android-IOS-/Todo.js"],"names":["React","useState","useEffect","Checkbox","useStateValue","actionTypes","AsyncStorage","Dimensions","get","width","Todo","todo","todos","dispatch","isModalVisible","setModalVisible","inputValue","setInputValue","toggleModalVisibility","_storeData","value","setItem","JSON","stringify","console","log","styles","container","check","newinfo","filter","thistodo","key","type","SET_TODOS","textinvalid","textvalid","SET_USER","user","viewWrapper","modalView","textInput","StyleSheet","create","screen","flex","alignItems","justifyContent","backgroundColor","position","top","left","elevation","transform","translateX","translateY","height","borderRadius","paddingVertical","paddingHorizontal","borderColor","borderWidth","marginBottom","margin","flexDirection","fontSize","padding","color","textDecorationLine"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  Text,\n  Modal,\n  TextInput,\n  Dimensions,\n  Button,\n} from \"react-native\";\nimport { Checkbox } from \"react-native-paper\";\nimport { useStateValue } from \"./StateProvider\";\nimport { actionTypes } from \"./reducer\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst { width } = Dimensions.get(\"window\");\nconst Todo = ({ todo }) => {\n  const [{ todos }, dispatch] = useStateValue();\n\n  // This is to manage Modal State\n  const [isModalVisible, setModalVisible] = useState(false);\n\n  // This is to manage TextInput State\n  const [inputValue, setInputValue] = useState(\"\");\n\n  // Create toggleModalVisibility function that will\n  // Open and close modal upon button clicks.\n  const toggleModalVisibility = () => {\n    setModalVisible(!isModalVisible);\n  };\n  async function _storeData(value) {\n    try {\n      await AsyncStorage.setItem(\"10~Tasks\", JSON.stringify(value));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {}, []);\n  return (\n    <View style={styles.container}>\n      <Checkbox\n        status={todo.check ? \"checked\" : \"unchecked\"}\n        onPress={() => {\n          const newinfo = todos.filter((thistodo) => thistodo.key !== todo.key);\n          _storeData([\n            { key: todo.key, todo: todo.todo, check: !todo.check },\n            ...newinfo,\n          ]);\n          dispatch({\n            type: actionTypes.SET_TODOS,\n            todos: [\n              { key: todo.key, todo: todo.todo, check: !todo.check },\n              ...newinfo,\n            ],\n          });\n        }}\n        color=\"white\"\n      />\n      <View style={styles.todo}>\n        <Text style={todo.check ? styles.textinvalid : styles.textvalid}>\n          {todo.todo}\n        </Text>\n      </View>\n\n      <Button\n        title=\"delete\"\n        color=\"crimson\"\n        onPress={() => {\n          dispatch({\n            type: actionTypes.SET_USER,\n            user: todo.key,\n          });\n        }}\n      >\n        Delete\n      </Button>\n      <Button title=\"Edit\" onPress={toggleModalVisibility} />\n      <Modal\n        animationType=\"slide\"\n        transparent\n        visible={isModalVisible}\n        presentationStyle=\"overFullScreen\"\n        onDismiss={toggleModalVisibility}\n      >\n        <View style={styles.viewWrapper}>\n          <View style={styles.modalView}>\n            <TextInput\n              placeholder=\"Enter something...\"\n              value={inputValue}\n              style={styles.textInput}\n              onChangeText={(value) => setInputValue(value)}\n            />\n\n            {/** This button is responsible to close the modal */}\n\n            <Button\n              title=\"Set\"\n              onPress={() => {\n                const newinfo = todos.filter(\n                  (thistodo) => thistodo.key !== todo.key\n                );\n                _storeData([\n                  { key: todo.key, todo: inputValue, check: todo.check },\n                  ...newinfo,\n                ]);\n                dispatch({\n                  type: actionTypes.SET_TODOS,\n                  todos: [\n                    { key: todo.key, todo: inputValue, check: todo.check },\n                    ...newinfo,\n                  ],\n                });\n                setInputValue(\"\");\n                toggleModalVisibility();\n              }}\n            />\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\nexport default Todo;\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#fff\",\n  },\n  viewWrapper: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n  },\n  modalView: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    elevation: 5,\n    transform: [{ translateX: -(width * 0.4) }, { translateY: -90 }],\n    height: 180,\n    width: width * 0.8,\n    backgroundColor: \"#fff\",\n    borderRadius: 7,\n  },\n  textInput: {\n    width: \"80%\",\n    borderRadius: 5,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderColor: \"rgba(0, 0, 0, 0.2)\",\n    borderWidth: 1,\n    marginBottom: 8,\n  },\n  container: {\n    flex: 1,\n    margin: 10,\n    backgroundColor: \"rgb(100,73,234)\",\n    borderRadius: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n  },\n  textvalid: {\n    fontSize: 30,\n    padding: 30,\n    color: \"white\",\n  },\n  textinvalid: {\n    fontSize: 30,\n    padding: 30,\n    textDecorationLine: \"line-through\",\n    color: \"grey\",\n  },\n  todo: {\n    width: 240,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}