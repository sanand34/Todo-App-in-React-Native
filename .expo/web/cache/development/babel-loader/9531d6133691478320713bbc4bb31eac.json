{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sanchit/Documents/GitHub/Todo-app-in-React-Native-Android-IOS-/node_modules/react-native-woodpicker/components/Picker.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useMemo } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Picker as RNPicker } from '@react-native-community/picker';\nimport DefaultInputButton from \"./InputButton\";\nimport DefaultDoneBar from \"./DoneBar\";\nimport IOSPicker from \"./IOSPicker\";\nimport AndroidPicker from \"./AndroidPicker\";\nvar isIOS = Platform.OS === 'ios';\nvar EMPTY_ITEM = {\n  value: '',\n  label: ''\n};\nvar DEFAULT_BACKDROP_ANIMATION = {\n  opactiy: 0.5,\n  duration: 1000,\n  delay: 300\n};\n\nfunction getAnimatedProperties(backdropAnimation) {\n  return _objectSpread(_objectSpread({}, DEFAULT_BACKDROP_ANIMATION), backdropAnimation);\n}\n\nvar Picker = function Picker(_ref) {\n  var item = _ref.item,\n      items = _ref.items,\n      disabled = _ref.disabled,\n      placeholder = _ref.placeholder,\n      title = _ref.title,\n      androidPickerMode = _ref.androidPickerMode,\n      doneText = _ref.doneText,\n      isNullable = _ref.isNullable,\n      onItemChange = _ref.onItemChange,\n      onOpen = _ref.onOpen,\n      onClose = _ref.onClose,\n      style = _ref.style,\n      containerStyle = _ref.containerStyle,\n      placeholderStyle = _ref.placeholderStyle,\n      InputComponent = _ref.InputComponent,\n      DoneBarComponent = _ref.DoneBarComponent,\n      backdropAnimation = _ref.backdropAnimation,\n      iOSOnlyProps = _ref.iOSOnlyProps,\n      androidOnlyProps = _ref.androidOnlyProps;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState(item ? items.find(function (current) {\n    return current === item;\n  }) : isNullable ? EMPTY_ITEM : items[0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedItem = _useState4[0],\n      setSelectedItem = _useState4[1];\n\n  var fadeAnimationValue = useRef(new Animated.Value(0)).current;\n  var animationProperties = useMemo(function () {\n    return getAnimatedProperties(backdropAnimation);\n  }, [backdropAnimation]);\n\n  var handleItemChange = function handleItemChange(value) {\n    var nullableItems = isNullable ? [EMPTY_ITEM].concat(_toConsumableArray(items)) : items;\n    var newSelectedItem = nullableItems.find(function (currentItem) {\n      return value === currentItem.value;\n    });\n\n    if (!isIOS) {\n      onItemChange(newSelectedItem);\n    }\n\n    setSelectedItem(newSelectedItem);\n  };\n\n  var toggle = function toggle() {\n    setShow(!show);\n    show ? onOpen() : onClose();\n  };\n\n  var togglePicker = function togglePicker() {\n    if (disabled) {\n      return;\n    }\n\n    if (!show) {\n      toggle();\n    }\n\n    Animated.timing(fadeAnimationValue, {\n      toValue: !show ? animationProperties.opactiy : 0,\n      duration: !show ? animationProperties.duration : 0,\n      delay: !show ? animationProperties.delay : 0,\n      useNativeDriver: true\n    }).start(show ? toggle : null);\n  };\n\n  var onDonePress = function onDonePress() {\n    togglePicker();\n    onItemChange(selectedItem);\n  };\n\n  var renderPickerItems = function renderPickerItems() {\n    var tempItems = isNullable ? [EMPTY_ITEM].concat(_toConsumableArray(items)) : items;\n    return tempItems.map(function (current) {\n      return React.createElement(RNPicker.Item, {\n        label: current.label,\n        value: current.value,\n        key: current.label,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      });\n    });\n  };\n\n  var renderPlaceholder = function renderPlaceholder() {\n    if (item && item.label) {\n      return item.label;\n    }\n\n    return placeholder;\n  };\n\n  var renderInputButton = function renderInputButton() {\n    var inputProps = {\n      togglePicker: togglePicker,\n      style: style,\n      placeholder: renderPlaceholder(),\n      placeholderStyle: placeholderStyle,\n      isNullable: false\n    };\n    var RenderComponent = InputComponent ? InputComponent : DefaultInputButton;\n    return React.createElement(RenderComponent, _extends({}, inputProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  var renderDoneBarButton = function renderDoneBarButton() {\n    var barProps = {\n      title: title,\n      doneText: doneText,\n      onDonePress: onDonePress\n    };\n    var RenderComponent = DoneBarComponent ? DoneBarComponent : DefaultDoneBar;\n    return React.createElement(RenderComponent, _extends({}, barProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  var pickerProps = {\n    selectedItem: selectedItem,\n    disabled: disabled,\n    show: show,\n    title: title,\n    androidPickerMode: androidPickerMode,\n    renderPlaceholder: renderPlaceholder,\n    renderInput: renderInputButton,\n    renderDoneBar: renderDoneBarButton,\n    renderPickerItems: renderPickerItems,\n    onItemChange: handleItemChange,\n    togglePicker: togglePicker,\n    style: style,\n    containerStyle: containerStyle,\n    placeholderStyle: placeholderStyle,\n    animationValue: fadeAnimationValue,\n    customProps: isIOS ? iOSOnlyProps : androidOnlyProps\n  };\n  return isIOS ? React.createElement(IOSPicker, _extends({}, pickerProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  })) : React.createElement(AndroidPicker, _extends({}, pickerProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }));\n};\n\nPicker.defaultProps = {\n  isNullable: false,\n  androidPickerMode: 'dialog',\n  title: '',\n  placeholder: '',\n  item: null,\n  onOpen: function onOpen() {\n    return null;\n  },\n  onClose: function onClose() {\n    return null;\n  },\n  backdropAnimation: DEFAULT_BACKDROP_ANIMATION,\n  iOSOnlyProps: {},\n  androidOnlyProps: {}\n};\nexport default Picker;","map":{"version":3,"sources":["/Users/sanchit/Documents/GitHub/Todo-app-in-React-Native-Android-IOS-/node_modules/react-native-woodpicker/components/Picker.js"],"names":["React","useState","useRef","useMemo","Picker","RNPicker","DefaultInputButton","DefaultDoneBar","IOSPicker","AndroidPicker","isIOS","Platform","OS","EMPTY_ITEM","value","label","DEFAULT_BACKDROP_ANIMATION","opactiy","duration","delay","getAnimatedProperties","backdropAnimation","item","items","disabled","placeholder","title","androidPickerMode","doneText","isNullable","onItemChange","onOpen","onClose","style","containerStyle","placeholderStyle","InputComponent","DoneBarComponent","iOSOnlyProps","androidOnlyProps","show","setShow","find","current","selectedItem","setSelectedItem","fadeAnimationValue","Animated","Value","animationProperties","handleItemChange","nullableItems","newSelectedItem","currentItem","toggle","togglePicker","timing","toValue","useNativeDriver","start","onDonePress","renderPickerItems","tempItems","map","renderPlaceholder","renderInputButton","inputProps","RenderComponent","renderDoneBarButton","barProps","pickerProps","renderInput","renderDoneBar","animationValue","customProps","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useMemo } from 'react';\nimport { Platform, Animated } from 'react-native';\nimport { Picker as RNPicker } from '@react-native-community/picker';\nimport DefaultInputButton from './InputButton';\nimport DefaultDoneBar from './DoneBar';\nimport IOSPicker from './IOSPicker';\nimport AndroidPicker from './AndroidPicker';\n\nconst isIOS = Platform.OS === 'ios';\nconst EMPTY_ITEM = { value: '', label: '' };\nconst DEFAULT_BACKDROP_ANIMATION = {\n  opactiy: 0.5,\n  duration: 1000,\n  delay: 300,\n}\nfunction getAnimatedProperties(backdropAnimation) {\n  return {\n    ...DEFAULT_BACKDROP_ANIMATION,\n    ...backdropAnimation,\n  }\n}\n\nconst Picker = ({\n  item,\n  items,\n  disabled,\n  placeholder,\n  title,\n  androidPickerMode,\n  doneText,\n  isNullable,\n  onItemChange,\n  onOpen,\n  onClose,\n  style,\n  containerStyle,\n  placeholderStyle,\n  InputComponent,\n  DoneBarComponent,\n  backdropAnimation,\n  iOSOnlyProps,\n  androidOnlyProps,\n}) => {\n  const [show, setShow] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(\n    item\n      ? items.find((current) => current === item)\n      : isNullable\n        ? EMPTY_ITEM\n        : items[0],\n  );\n  const fadeAnimationValue = useRef(new Animated.Value(0)).current;\n\n  const animationProperties = useMemo(() => getAnimatedProperties(backdropAnimation), [backdropAnimation])\n\n  const handleItemChange = (value) => {\n    const nullableItems = isNullable ? [EMPTY_ITEM, ...items] : items;\n\n    const newSelectedItem = nullableItems.find(\n      (currentItem) => value === currentItem.value,\n    );\n\n    if (!isIOS) {\n      onItemChange(newSelectedItem);\n    }\n\n    setSelectedItem(newSelectedItem);\n  };\n\n  const toggle = () => {\n    setShow(!show);\n    show ? onOpen() : onClose();\n  };\n\n  const togglePicker = () => {\n    if (disabled) {\n      return;\n    }\n\n    if (!show) {\n      toggle();\n    }\n\n    Animated.timing(fadeAnimationValue, {\n      toValue: !show ? animationProperties.opactiy : 0,\n      duration: !show ? animationProperties.duration : 0,\n      delay: !show ? animationProperties.delay : 0,\n      useNativeDriver: true,\n    }).start(show ? toggle : null);\n  };\n\n  const onDonePress = () => {\n    togglePicker();\n    onItemChange(selectedItem);\n  };\n\n  const renderPickerItems = () => {\n    const tempItems = isNullable ? [EMPTY_ITEM, ...items] : items;\n    return tempItems.map((current) => {\n      return (\n        <RNPicker.Item\n          label={current.label}\n          value={current.value}\n          key={current.label}\n        />\n      );\n    });\n  };\n\n  const renderPlaceholder = () => {\n    if (item && item.label) {\n      return item.label;\n    }\n    return placeholder;\n  };\n\n  const renderInputButton = () => {\n    const inputProps = {\n      togglePicker,\n      style,\n      placeholder: renderPlaceholder(),\n      placeholderStyle,\n      isNullable: false,\n    };\n    const RenderComponent = InputComponent\n      ? InputComponent\n      : DefaultInputButton;\n    return <RenderComponent {...inputProps} />;\n  };\n\n  const renderDoneBarButton = () => {\n    const barProps = {\n      title,\n      doneText,\n      onDonePress,\n    };\n    const RenderComponent = DoneBarComponent\n      ? DoneBarComponent\n      : DefaultDoneBar;\n    return <RenderComponent {...barProps} />;\n  };\n\n  const pickerProps = {\n    selectedItem,\n    disabled,\n    show,\n    title,\n    androidPickerMode,\n    renderPlaceholder,\n    renderInput: renderInputButton,\n    renderDoneBar: renderDoneBarButton,\n    renderPickerItems,\n    onItemChange: handleItemChange,\n    togglePicker,\n    style,\n    containerStyle,\n    placeholderStyle,\n    animationValue: fadeAnimationValue,\n    customProps: isIOS ? iOSOnlyProps : androidOnlyProps\n  };\n\n  return isIOS ? (\n    <IOSPicker {...pickerProps} />\n  ) : (\n      <AndroidPicker {...pickerProps} />\n    );\n};\n\nPicker.defaultProps = {\n  isNullable: false,\n  androidPickerMode: 'dialog',\n  title: '',\n  placeholder: '',\n  item: null,\n  onOpen: () => null,\n  onClose: () => null,\n  backdropAnimation: DEFAULT_BACKDROP_ANIMATION,\n  iOSOnlyProps: {},\n  androidOnlyProps: {},\n};\n\nexport default Picker;\n"]},"metadata":{},"sourceType":"module"}