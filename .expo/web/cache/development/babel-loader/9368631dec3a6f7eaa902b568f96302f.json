{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sanchit/Documents/GitHub/Todo-app-in-React-Native-Android-IOS-/node_modules/react-native-woodpicker/components/IOSPicker.js\";\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Picker as RNPicker } from '@react-native-community/picker';\nimport { styles } from \"../helpers/stylesHelper\";\n\nvar IOSPicker = function IOSPicker(_ref) {\n  var selectedItem = _ref.selectedItem,\n      disabled = _ref.disabled,\n      show = _ref.show,\n      title = _ref.title,\n      androidPickerMode = _ref.androidPickerMode,\n      renderInput = _ref.renderInput,\n      renderDoneBar = _ref.renderDoneBar,\n      renderPickerItems = _ref.renderPickerItems,\n      onItemChange = _ref.onItemChange,\n      togglePicker = _ref.togglePicker,\n      containerStyle = _ref.containerStyle,\n      animationValue = _ref.animationValue,\n      customProps = _ref.customProps;\n  return React.createElement(View, {\n    style: containerStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, renderInput(), React.createElement(Modal, {\n    visible: show,\n    transparent: true,\n    animationType: \"slide\",\n    supportedOrientations: ['portrait', 'landscape'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.blurTouchable,\n    onPress: togglePicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: [styles.animatedInput, {\n      opacity: animationValue\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), renderDoneBar(), React.createElement(RNPicker, _extends({\n    style: styles.iosPickerContainer,\n    prompt: title,\n    onValueChange: onItemChange,\n    selectedValue: selectedItem.value,\n    mode: androidPickerMode,\n    enabled: !disabled\n  }, customProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), renderPickerItems())));\n};\n\nexport default IOSPicker;","map":{"version":3,"sources":["/Users/sanchit/Documents/GitHub/Todo-app-in-React-Native-Android-IOS-/node_modules/react-native-woodpicker/components/IOSPicker.js"],"names":["React","Picker","RNPicker","styles","IOSPicker","selectedItem","disabled","show","title","androidPickerMode","renderInput","renderDoneBar","renderPickerItems","onItemChange","togglePicker","containerStyle","animationValue","customProps","blurTouchable","animatedInput","opacity","iosPickerContainer","value"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,SAASC,MAAM,IAAIC,QAAnB,QAAmC,gCAAnC;AACA,SAASC,MAAT;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAcZ;AAAA,MAbJC,YAaI,QAbJA,YAaI;AAAA,MAZJC,QAYI,QAZJA,QAYI;AAAA,MAXJC,IAWI,QAXJA,IAWI;AAAA,MAVJC,KAUI,QAVJA,KAUI;AAAA,MATJC,iBASI,QATJA,iBASI;AAAA,MARJC,WAQI,QARJA,WAQI;AAAA,MAPJC,aAOI,QAPJA,aAOI;AAAA,MANJC,iBAMI,QANJA,iBAMI;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJC,YAII,QAJJA,YAII;AAAA,MAHJC,cAGI,QAHJA,cAGI;AAAA,MAFJC,cAEI,QAFJA,cAEI;AAAA,MADJC,WACI,QADJA,WACI;AACJ,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,WAAW,EADd,EAEE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEH,IADX;AAEE,IAAA,WAAW,MAFb;AAGE,IAAA,aAAa,EAAC,OAHhB;AAIE,IAAA,qBAAqB,EAAE,CAAC,UAAD,EAAa,WAAb,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEJ,MAAM,CAACe,aAAhC;AAA+C,IAAA,OAAO,EAAEJ,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,CACLX,MAAM,CAACgB,aADF,EAEL;AACEC,MAAAA,OAAO,EAAEJ;AADX,KAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,EAeGL,aAAa,EAfhB,EAgBE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAER,MAAM,CAACkB,kBADhB;AAEE,IAAA,MAAM,EAAEb,KAFV;AAGE,IAAA,aAAa,EAAEK,YAHjB;AAIE,IAAA,aAAa,EAAER,YAAY,CAACiB,KAJ9B;AAKE,IAAA,IAAI,EAAEb,iBALR;AAME,IAAA,OAAO,EAAE,CAACH;AANZ,KAOMW,WAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQGL,iBAAiB,EARpB,CAhBF,CAFF,CADF;AAgCD,CA/CD;;AAiDA,eAAeR,SAAf","sourcesContent":["import * as React from 'react';\nimport { View, Modal, Animated, TouchableOpacity } from 'react-native';\nimport { Picker as RNPicker } from '@react-native-community/picker';\nimport { styles } from '../helpers/stylesHelper';\n\nconst IOSPicker = ({\n  selectedItem,\n  disabled,\n  show,\n  title,\n  androidPickerMode,\n  renderInput,\n  renderDoneBar,\n  renderPickerItems,\n  onItemChange,\n  togglePicker,\n  containerStyle,\n  animationValue,\n  customProps\n}) => {\n  return (\n    <View style={containerStyle}>\n      {renderInput()}\n      <Modal\n        visible={show}\n        transparent\n        animationType=\"slide\"\n        supportedOrientations={['portrait', 'landscape']}>\n        <TouchableOpacity style={styles.blurTouchable} onPress={togglePicker}>\n          <Animated.View\n            style={[\n              styles.animatedInput,\n              {\n                opacity: animationValue,\n              },\n            ]}\n          />\n        </TouchableOpacity>\n        {renderDoneBar()}\n        <RNPicker\n          style={styles.iosPickerContainer}\n          prompt={title}\n          onValueChange={onItemChange}\n          selectedValue={selectedItem.value}\n          mode={androidPickerMode}\n          enabled={!disabled}\n          {...customProps}>\n          {renderPickerItems()}\n        </RNPicker>\n      </Modal>\n    </View>\n  );\n};\n\nexport default IOSPicker;\n"]},"metadata":{},"sourceType":"module"}