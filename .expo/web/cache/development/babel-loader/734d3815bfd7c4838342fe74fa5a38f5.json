{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sanchit/Documents/GitHub/Todo-app-in-React-Native-Android-IOS-/Main.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Todo from \"./Todo.js\";\nimport { v4 } from \"uuid\";\nimport { useStateValue } from \"./StateProvider\";\nimport { Appbar, TextInput } from \"react-native-paper\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { actionTypes } from \"./reducer\";\n\nfunction Main() {\n  var _this = this;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useStateValue = useStateValue(),\n      _useStateValue2 = _slicedToArray(_useStateValue, 2),\n      _useStateValue2$ = _useStateValue2[0],\n      user = _useStateValue2$.user,\n      todos = _useStateValue2$.todos,\n      dispatch = _useStateValue2[1];\n\n  var didMountRef = useRef(false);\n\n  function _storeData(value) {\n    return _regeneratorRuntime.async(function _storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"10~Tasks\", JSON.stringify(value)));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n\n  function _retrieveData() {\n    var value, key;\n    return _regeneratorRuntime.async(function _retrieveData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"10~Tasks\"));\n\n          case 3:\n            value = _context2.sent;\n\n            if (JSON.parse(value) !== null) {\n              dispatch({\n                type: actionTypes.SET_TODOS,\n                todos: JSON.parse(value)\n              });\n              console.log(JSON.parse(value));\n            } else {\n              key = v4();\n              dispatch({\n                type: actionTypes.SET_TODOS,\n                todos: [{\n                  key: key,\n                  todo: \"Welcome\",\n                  check: false\n                }]\n              });\n\n              _storeData([{\n                key: key,\n                todo: \"Welcome\",\n                check: false\n              }]);\n            }\n\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  useEffect(function () {\n    _retrieveData();\n  }, []);\n  useEffect(function () {\n    if (didMountRef.current) {\n      var newinfo = todos.filter(function (todo) {\n        return todo.key !== user;\n      });\n      todos && _storeData(newinfo);\n      todos && dispatch({\n        type: actionTypes.SET_TODOS,\n        todos: newinfo\n      });\n    } else didMountRef.current = true;\n  }, [user]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(Appbar.Header, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(Appbar.Content, {\n    title: \"Todo App\",\n    subtitle: \"Sanchit Anand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), React.createElement(ScrollView, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, todos == null ? void 0 : todos.map(function (todo) {\n    return React.createElement(Todo, {\n      key: todo.key,\n      todo: todo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    });\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    label: \"Add Todo\",\n    value: input,\n    onChangeText: function onChangeText(text) {\n      setInput(text);\n    },\n    onSubmitEditing: function onSubmitEditing() {\n      dispatch({\n        type: actionTypes.SET_TODOS,\n        todos: [].concat(_toConsumableArray(todos), [{\n          key: v4(),\n          todo: input,\n          check: false\n        }])\n      });\n\n      _storeData([].concat(_toConsumableArray(todos), [{\n        todo: input,\n        check: false\n      }]));\n\n      setInput(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Main;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  body: {\n    backgroundColor: \"rgb(34,34,34)\",\n    paddingTop: 10,\n    height: 10\n  },\n  header: {\n    padding: 40\n  }\n});","map":{"version":3,"sources":["/Users/sanchit/Documents/GitHub/Todo-app-in-React-Native-Android-IOS-/Main.js"],"names":["React","useState","useEffect","useRef","Todo","v4","useStateValue","Appbar","TextInput","AsyncStorage","actionTypes","Main","input","setInput","user","todos","dispatch","didMountRef","_storeData","value","setItem","JSON","stringify","console","log","_retrieveData","getItem","parse","type","SET_TODOS","key","todo","check","current","newinfo","filter","styles","container","header","body","map","text","StyleSheet","create","flex","backgroundColor","paddingTop","height","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { View, StyleSheet, ScrollView } from \"react-native\";\nimport Todo from \"./Todo.js\";\nimport { v4 } from \"uuid\";\nimport { useStateValue } from \"./StateProvider\";\nimport { Appbar, TextInput } from \"react-native-paper\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { actionTypes } from \"./reducer\";\nfunction Main() {\n  const [input, setInput] = useState();\n  const [{ user, todos }, dispatch] = useStateValue();\n  const didMountRef = useRef(false);\n  async function _storeData(value) {\n    try {\n      await AsyncStorage.setItem(\"10~Tasks\", JSON.stringify(value));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async function _retrieveData() {\n    try {\n      const value = await AsyncStorage.getItem(\"10~Tasks\");\n      if (JSON.parse(value) !== null) {\n        dispatch({\n          type: actionTypes.SET_TODOS,\n          todos: JSON.parse(value),\n        });\n\n        console.log(JSON.parse(value));\n      } else {\n        const key = v4();\n        dispatch({\n          type: actionTypes.SET_TODOS,\n          todos: [{ key: key, todo: \"Welcome\", check: false }],\n        });\n        _storeData([{ key: key, todo: \"Welcome\", check: false }]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    _retrieveData();\n  }, []);\n  useEffect(() => {\n    if (didMountRef.current) {\n      const newinfo = todos.filter((todo) => todo.key !== user);\n      todos && _storeData(newinfo);\n      todos &&\n        dispatch({\n          type: actionTypes.SET_TODOS,\n          todos: newinfo,\n        });\n    } else didMountRef.current = true;\n  }, [user]);\n\n  return (\n    <View style={styles.container}>\n      <Appbar.Header style={styles.header}>\n        <Appbar.Content title=\"Todo App\" subtitle={\"Sanchit Anand\"} />\n      </Appbar.Header>\n\n      <ScrollView style={styles.body}>\n        {todos?.map((todo) => (\n          <Todo key={todo.key} todo={todo} />\n        ))}\n      </ScrollView>\n      <View>\n        <TextInput\n          label=\"Add Todo\"\n          value={input}\n          onChangeText={(text) => {\n            setInput(text);\n          }}\n          onSubmitEditing={() => {\n            dispatch({\n              type: actionTypes.SET_TODOS,\n              todos: [...todos, { key: v4(), todo: input, check: false }],\n            });\n\n            _storeData([...todos, { todo: input, check: false }]);\n            setInput(\"\");\n          }}\n        />\n      </View>\n    </View>\n  );\n}\n\nexport default Main;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n\n  body: {\n    backgroundColor: \"rgb(34,34,34)\",\n    paddingTop: 10,\n    height: 10,\n  },\n  header: {\n    padding: 40,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}